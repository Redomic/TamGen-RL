üìÑ Preparing PDB: 3ny8
3ny8 is downloaded
Namespace(no_progress_bar=False, log_interval=1000, log_format=None, tensorboard_logdir='', tbmf_wrapper=False, seed=1, cpu=False, fp16=False, memory_efficient_fp16=False, fp16_init_scale=128, fp16_scale_window=None, fp16_scale_tolerance=0.0, min_loss_scale=0.0001, threshold_loss_scale=None, user_dir=None, criterion='cross_entropy', tokenizer=None, bpe=None, optimizer='nag', lr_scheduler='fixed', task='translation_coord', num_workers=1, skip_invalid_size_inputs_valid_test=False, max_tokens=1024, max_sentences=None, required_batch_size_multiple=8, dataset_impl=None, gen_subset='gen_8fln', num_shards=1, shard_id=0, path='checkpoints/crossdocked_model/checkpoint_best.pt', remove_bpe=None, quiet=False, model_overrides='{}', results_path=None, beam=20, nbest=20, max_len_a=0, max_len_b=200, min_len=1, match_source_len=False, no_early_stop=False, unnormalized=False, no_beamable_mm=False, lenpen=1, unkpen=0, replace_unk=None, sacrebleu=False, score_reference=False, prefix_size=0, prefix_string=None, tag_prefix_token=False, no_repeat_ngram_size=0, sampling=False, sampling_topk=-1, sampling_topp=-1.0, temperature=1.0, diverse_beam_groups=-1, diverse_beam_strength=0.5, print_alignment=False, scorer='bleu', codegen_pov_replace_unk=True, dump_hyp=None, momentum=0.99, weight_decay=0.0, force_anneal=None, lr_shrink=0.1, warmup_updates=0, data='TamGen_Demo_Data', source_lang='tg', target_lang='m1', lazy_load=False, raw_text=False, left_pad_source='True', left_pad_target='False', max_source_positions=1024, max_target_positions=1024, upsample_primary=1, coord_mode='raw', use_src_coord=True, use_tgt_coord=False, shuffle_input=False, vae=False, sample_beta=1.0, hint=False, hint_rate=0.5, gen_coord_noise=False, gen_rot=False, gen_vae=True, remove_prefix_fragment=False)
| [tg] dictionary: 25 types
| [m1] dictionary: 962 types
| loading model(s) from checkpoints/crossdocked_model/checkpoint_best.pt
checkpoints/crossdocked_model/checkpoint_best.pt
gpt_model/checkpoint_best.pt
| loaded 5 examples from: TamGen_Demo_Data/gen_3ny8.tg-m1.tg
| loaded 5 examples from: TamGen_Demo_Data/gen_3ny8.tg-m1.m1
| TamGen_Demo_Data gen_3ny8 tg-m1 5 examples
| loaded 5 examples from: TamGen_Demo_Data/gen_3ny8.tg-m1.tg.coord
‚öôÔ∏è  Starting closed-loop optimization...

üöÄ Iteration 1/20
  0%|          | 0/10 [00:00<?, ?it/s]üì¶ Stored protein input with shape: torch.Size([5, 78])
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [5, 20], which does not match the required output shape [4, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [5, 20], which does not match the required output shape [4, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [5, 40], which does not match the required output shape [4, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [3, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [3, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [4, 40], which does not match the required output shape [3, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [3, 20], which does not match the required output shape [2, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [3, 20], which does not match the required output shape [2, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [3, 40], which does not match the required output shape [2, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [2, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [2, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [2, 40], which does not match the required output shape [1, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
 10%|‚ñà         | 1/10 [00:03<00:32,  3.66s/it]/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [1, 40], which does not match the required output shape [5, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
 20%|‚ñà‚ñà        | 2/10 [00:06<00:23,  2.94s/it] 30%|‚ñà‚ñà‚ñà       | 3/10 [00:08<00:18,  2.67s/it] 40%|‚ñà‚ñà‚ñà‚ñà      | 4/10 [00:10<00:15,  2.59s/it] 50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 5/10 [00:13<00:12,  2.51s/it] 60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 6/10 [00:15<00:09,  2.48s/it] 70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 7/10 [00:18<00:07,  2.45s/it] 80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 8/10 [00:20<00:04,  2.43s/it]/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [3, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [3, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [3, 40], which does not match the required output shape [1, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
 90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 9/10 [00:22<00:02,  2.41s/it] 90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 9/10 [00:22<00:02,  2.54s/it]
Total valid SMILES and latents after all seeds: 45
Unique SMILES this iteration: 5 / 45
üìä Optimizing latent space...
[WARNING] Only 5 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 1 complete.

üöÄ Iteration 2/20
üîÑ Generating from 45 shifted latent vectors...
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [1, 40], which does not match the required output shape [4, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [1, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [4, 40], which does not match the required output shape [1, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:456: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [2, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/sequence_generator.py:466: UserWarning: An output with one or more elements was resized since it had shape [4, 20], which does not match the required output shape [2, 20]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.gather(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [4, 40], which does not match the required output shape [2, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [2, 40], which does not match the required output shape [4, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
/workspace/workspace/TamGen/fairseq/search.py:71: UserWarning: An output with one or more elements was resized since it had shape [3, 40], which does not match the required output shape [4, 40]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:31.)
  torch.topk(
Unique SMILES this iteration: 10 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 2 complete.

üöÄ Iteration 3/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 7 / 45
üìä Optimizing latent space...
[WARNING] Only 7 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 3 complete.

üöÄ Iteration 4/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 8 / 45
üìä Optimizing latent space...
[WARNING] Only 8 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 4 complete.

üöÄ Iteration 5/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 10 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 5 complete.

üöÄ Iteration 6/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 9 / 45
üìä Optimizing latent space...
[WARNING] Only 9 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 6 complete.

üöÄ Iteration 7/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 12 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 7 complete.

üöÄ Iteration 8/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 15 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 8 complete.

üöÄ Iteration 9/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 13 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 9 complete.

üöÄ Iteration 10/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 7 / 45
üìä Optimizing latent space...
[WARNING] Only 7 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 10 complete.

üöÄ Iteration 11/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 8 / 45
üìä Optimizing latent space...
[WARNING] Only 8 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 11 complete.

üöÄ Iteration 12/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 13 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 12 complete.

üöÄ Iteration 13/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 8 / 45
üìä Optimizing latent space...
[WARNING] Only 8 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 13 complete.

üöÄ Iteration 14/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 10 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 14 complete.

üöÄ Iteration 15/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 10 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 15 complete.

üöÄ Iteration 16/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 8 / 45
üìä Optimizing latent space...
[WARNING] Only 8 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 16 complete.

üöÄ Iteration 17/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 7 / 45
üìä Optimizing latent space...
[WARNING] Only 7 unique SMILES in top_k_z.
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 17 complete.

üöÄ Iteration 18/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 11 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 18 complete.

üöÄ Iteration 19/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 10 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 19 complete.

üöÄ Iteration 20/20
üîÑ Generating from 45 shifted latent vectors...
Unique SMILES this iteration: 11 / 45
üìä Optimizing latent space...
   ‚úî Optimization complete.
üíæ Saving latent vectors and rewards...
‚úÖ Iteration 20 complete.

üéâ Feedback loop finished. Ready for SGDS optimization.

Final set of SMILES (45 molecules):
CCc1[nH]c(=N)[nH]c(=N)c1C#C[C@H](C)c1cc(OC)cc(-c2ccncc2)c1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3cc(Cl)ccc3s2)C1=O
COc1cc2c(cc1O)CC[C@@H]1[C@@H]2CC[C@]2(C)[C@@H](OS(N)(O)O)CC[C@@H]12
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3cc(Cl)ccc3s2)C1=O
N=C(O)Nc1sc(-c2ccc(Cl)cc2)cc1C(O)=N[C@H]1CCCNC1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3cc(Cl)ccc3s2)C1=O
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3cc(Cl)ccc3s2)C1=O
COc1cc2c(cc1O)CC[C@@H]1[C@@H]2CC[C@]2(C)[C@@H](OS(N)(O)O)CC[C@@H]12
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
O=S(=O)(c1ccc(-c2ccccc2)cc1)N(CCO)CC(O)=NO
CCc1[nH]c(=N)[nH]c(=N)c1C#C[C@H](C)c1cc(OC)cc(-c2ccncc2)c1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
COc1cc2c(cc1OC)=C1N=NC(c3ccc(-c4ccc(O)cc4)cc3)=C1C=2
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3ccc(Cl)cc3s2)C1=O
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
COc1cc2c(cc1OC)=C1N=NC(c3ccc(-c4ccc(O)cc4)cc3)=C1C=2
CC(C)n1c(/C=C/[C@@H](O)C[C@@H](O)CC(=O)O)c(-c2ccc(F)cc2)c2ccccc21
C[C@@H](C(=O)N1CCOCC1)N1CC[C@H](NS(=O)(=O)c2cc3cc(Cl)ccc3s2)C1=O
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CCc1[nH]c(=N)[nH]c(=N)c1C#C[C@H](C)c1cc(OC)cc(-c2ccncc2)c1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
COc1cc2c(cc1OC)=C1N=NC(c3ccc(-c4ccc(O)cc4)cc3)=C1C=2
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccccc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
CC(C)N(Cc1ccccc1OCCCCCC(=O)O)C(=O)c1ccc(-c2ccoc2)cc1
CC(C)ON(CC(O)=NO)S(=O)(=O)c1ccc(-c2ccccc2)cc1
